<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <title>Welcome</title>
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Copyright -->
    <meta name="author" content="Noah Elijah Till"/>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
          crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
            crossorigin="anonymous"></script>
    <!-- Google Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet">
    <!-- Vue -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2" crossorigin="anonymous"></script>
</head>
<body class="vw-100 vh-100">
{{if .Failed}}
<div id="token-manager" class="d-flex justify-content-center align-items-center flex-column position-absolute w-100" style="top: 20vh">
    <div class="d-flex align-items-center justify-content-center h-100">
        <h1>{{.Message}}</h1>
    </div>
</div>
{{else}}
<div id="token-manager" class="d-flex justify-content-center align-items-center flex-column position-absolute w-100" style="top: 20vh">
    <div v-if="!done && !failed" class="h-100">
        <div class="d-flex flex-column align-items-center justify-content-center h-100">
            <h1>Register</h1>
            <div class="container">
                <div class="form-floating mb-4">
                    <input v-model="username" type="text" class="form-control" id="username" placeholder="Noah Till">
                    <label for="username">Username</label>
                    <div id="helper" class="form-text">A name to easily identify you in the system. The Username should be: Between 3 and 30 characters long, contains only upper and lower case characters, . and _ (but not at the end)</div>
                </div>
                <div class="form-floating mb-4">
                    <input v-model="gitUsername" type="text" class="form-control" id="gitUsername" placeholder="MindCollaps" @keyup.enter="submit()">
                    <label for="gitUsername">GitHub Username</label>
                    <div id="helper" class="form-text">The name of your github account. Click <a href="https://github.com/settings/profile" target="_blank">here</a> to see your profile. The Username should be: Between 3 and 30 characters long, contains only upper and lower case characters, . and _ (but not at the end)</div>
                </div>
                <div class="mb-4 d-flex justify-content-center">
                    <button @click="submit()" class="btn btn-primary align-center">Submit</button>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center align-items-center flex-column position-absolute w-100" style="top: 20vh" v-if="done && !failed">
        <div class="d-flex flex-column align-items-center justify-content-center h-100">
            <h1>Success</h1>
            <p>You can now close this window.</p>
        </div>
    </div>
    <div class="d-flex justify-content-center align-items-center flex-column position-absolute w-100" style="top: 20vh" v-if="!done && failed">
        <div class="d-flex align-items-center justify-content-center h-100">
            <h1>${message]</h1>
        </div>
    </div>
</div>

<script>
    var main = new Vue({
        el: '#token-manager',
        data: {
            username: "",
            gitUsername: "",
            token: "",
            done: false,
            failed: false,
            message: ""
        },
        delimiters: ['${', '}'],
        created: function () {
            this.token = window.location.href.split("/").pop();
        },
        methods: {
            submit: async function () {
                let response = await fetch('/tk', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        username: this.username,
                        gitUsername: this.gitUsername,
                        token: this.token
                    })
                }).then((res) => {
                    return res;
                });
                // Send info if it fails
                if (response.status !== 200) {
                    let data = await response.json();

                    if (data.tokenError){
                        this.message = data.message;
                        this.failed = true;
                        return
                    }
                    if (data.field === "username") {
                        document.getElementById("username").classList.add("is-invalid");
                        document.getElementById("gitUsername").classList.remove("is-invalid");
                    } else if (data.field === "gitUsername") {
                        document.getElementById("gitUsername").classList.add("is-invalid");
                        document.getElementById("username").classList.remove("is-invalid");
                    } else {
                        alert(data.message);
                    }
                } else {
                    document.getElementById("gitUsername").classList.remove("is-invalid");
                    document.getElementById("username").classList.remove("is-invalid");
                    document.getElementById("username").classList.add("is-valid");
                    document.getElementById("gitUsername").classList.add("is-valid");
                    alert("Success");
                    this.done = true
                }
            }
        }
    });
</script>
{{end}}
{{template "footer"}}
</body>
</html>
