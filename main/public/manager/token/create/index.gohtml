<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <title>Create Token</title>
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Copyright -->
    <meta name="author" content="Noah Elijah Till"/>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
          crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
            crossorigin="anonymous"></script>
    <!-- Google Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet">
    <!-- Vue -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2" crossorigin="anonymous"></script>
</head>
<body>

<div id="token-manager" class="container">
    <h1>Create Login Token</h1>
    <button class="btn btn-danger" onclick="window.location.href = '/manager'">Back</button>
    <div class="container">
        <div class="form-floating mb-3">
            <input v-model="name" type="text" class="form-control" id="floatingInput" placeholder="Token Name">
            <label for="floatingInput">Name</label>
        </div>
        <div class="mb-3 mt-3">
            <h2>User Group</h2>
            <div class="container" id="userGroup">
                {{range .Groups}}
                <div class="row">
                    <p class="col">{{.Name}}</p>
                    <p class="col">Created: {{.Date}}</p>
                    <button v-if="userGroup == '{{.ID}}'" class="btn btn-danger col" @click="select('')">Unselect</button>
                    <button v-if="userGroup != '{{.ID}}'" class="btn btn-primary col" @click="select('{{.ID}}')">Select</button>
                </div>
                {{end}}
            </div>
        </div>
        <div class="mb-3 form-floating">
            <input v-model="count" type="number" class="form-control" id="count">
            <label for="count">Count</label>
        </div>
        <div class="mb-3 form-floating">
            <input v-model="dateExpires" type="datetime-local" class="form-control" id="dateExpires">
            <label for="dateExpires">Expires</label>
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" v-model="directAdd" class="form-check-input" id="directAdd">
            <label class="form-check-label" for="directAdd">Direct Add Users</label>
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" v-model="autoDelete" class="form-check-input" id="autoDelete">
            <label class="form-check-label" for="autoDelete">Auto Remove Users</label>
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" v-model="notify" class="form-check-input" id="notify">
            <label class="form-check-label" for="notify">Notify</label>
        </div>
        <div class="mb-3 d-flex justify-content-center">
            <button @click="submit()" class="btn btn-primary align-center">Submit</button>
        </div>
    </div>
</div>

<script>
    var main = new Vue({
        el: '#token-manager',
        data: {
            name: "",
            userGroup: "",
            directAdd: true,
            autoDelete: true,
            notify: true,
            dateExpires: new Date().toISOString().slice(0, 19).replace('T', ' '),
            count: 0
        },
        methods: {
            submit: async function () {
                let response = await fetch('/manager/token/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        name: this.name,
                        userGroup: this.userGroup,
                        directAdd: this.directAdd,
                        autoDelete: this.autoDelete,
                        notify: this.notify,
                        dateExpires: this.dateExpires,
                        count: this.count
                    })
                });
                // Send info if it fails
                if (response.status !== 200) {
                    alert("Failed to create token");
                } else {
                    alert("Token created");
                    //show qr code
                    let data = await response.json();
                    window.location.href = "/token/" + data.token;
                }
            },
            select: function (id) {
                this.userGroup = id;
            }
        }
    });

</script>
</body>
</html>
