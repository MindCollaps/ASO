<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <title>Scan Repo</title>
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Copyright -->
    <meta name="author" content="Noah Elijah Till"/>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
    <!-- Google Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet">
    <!-- Vue -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2" crossorigin="anonymous"></script>
</head>
<body style="height: 100dvh">
<div id="manager" class="d-flex flex-column h-100 w-100">
    <button class="btn btn-danger pl-2" style="position: absolute; right: 10%; top: 5%"
            onclick="window.location.href = '/manager/group/{{.GroupID}}'">Back
    </button>
    <div v-if="pre" class="d-flex flex-column justify-content-center h-100 align-items-center">
        <div v-if="members.length != 0" class="bg-body-secondary p-3 rounded-3 shadow">
            <button class="btn btn-warning" @click="grp = !grp">${getMode()}</button>
            <br>
            <p class="mb-0 mt-0">
                There ${getMembers().length == 1 ? 'is' : 'are'} <b>${getMembers().length}</b> ${getMembers().length == 1 ? 'member' :
                'members'} in the repository <b>{{.Repo}}</b> which ${getMembers().length == 1 ? 'is' : 'are'} not listed
                within ${getText()}<br><br>
                Please set default settings for all new added members
            </p>
            <br>
            <div class="mb-4 form-check">
                <input type="checkbox" v-model="expiregroup" class="form-check-input" id="expiregroup">
                <label class="form-check-label" for="expiregroup">Expires by Group</label>
                <div id="emailHelp" class="form-text">Does the expiration date depend on the group</div>
            </div>
            <div v-if="!expiregroup" class="mb-4 form-check">
                <input type="checkbox" v-model="expire" class="form-check-input" id="expire">
                <label class="form-check-label" for="expire">Expires</label>
                <div id="helper" class="form-text">Does this user expires at all?</div>
            </div>
            <div v-if="!expiregroup && expire" class="mb-4 form-floating">
                <input v-model="dateExpires" type="datetime-local" class="form-control" id="dateExpires">
                <label for="dateExpires">Expires</label>
                <div id="help" class="form-text">The date when this user gets deleted automatically, removed from the
                    group and the repo
                </div>
            </div>
        </div>
        <div v-if="members.length === 0" class="bg-body-secondary p-3 rounded-3 shadow">
            <p class="mb-0 mt-0">
                There are no members in the repository {{.Repo}} which are not listed within ASO
            </p>
        </div>
        <button v-if="members.length != 0" class="btn btn-primary mt-2" @click="pre = false">Start</button>
        <button v-if="members.length === 0" class="btn btn-primary mt-2"
                onclick="window.location.href = '/manager/group/{{.GroupID}}'">Ok
        </button>
    </div>
    <div v-if="!pre && !done">
        <div class="bg-body-secondary p-2 w-100 d-flex flex-column justify-content-center align-items-center">
            <div class="shadow bg-body-tertiary p-3 rounded-3 d-flex flex-column justify-content-center align-items-center">
                <a target="_blank" href="https://github.com/{{.Owner}}/{{.Repo}}"><h2>{{.GroupName}}</h2></a>
                <div class="d-flex flex-row gap-2">
                    <p class="mb-0 mt-0">Owner: {{.Owner}}</p>
                    <p class="mb-0 mt-0">Repo: {{.Repo}}</p>
                </div>
            </div>
            <div class="d-flex flex-row gap-2 mt-3 mb-2">
                <div v-for="(m, i) in getMembers()" :class="topClass(i)" :style="topStyle(i)"
                     style="height: 20px; width: 40px;"></div>
            </div>
        </div>
        <div class="p-3 mt-3 d-flex flex-column justify-content-center w-100 align-items-center">
            <div class="p-4 shadow bg-body-tertiary rounded-3 d-flex flex-column justify-content-center align-items-center">
                <h3>${members[step].GitName}</h3>
                <p>${members[step].Name == '' ? 'Name hidden' : members[step].Name}</p>
                <p>${members[step].Email == '' ? 'Email hidden' : members[step].GitEmail}</p>
            </div>
            <div class="mt-5 p-4 w-50 shadow bg-body-tertiary rounded-3 d-flex flex-row justify-content-between align-items-center">
                <button class="btn btn-warning"
                        @click="skip()">Skip
                </button>
                <div class="form-floating">
                    <input v-model="givenName" type="text" class="form-control" id="floatingInput"
                           placeholder="Name">
                    <label for="floatingInput">Name</label>
                    <div id="helper" class="form-text">The name to easily identify this member in the system</div>
                </div>
                <button class="btn btn-success"
                        @click="add()">Add
                </button>
            </div>
        </div>
    </div>
    <div v-if="done" class="d-flex flex-column justify-content-center h-100 align-items-center">
        <div class="bg-body-secondary p-3 rounded-3 shadow">
            <p class="mb-0 mt-0">
                All members have been added to the system!
            </p>
        </div>
        <button class="btn btn-primary mt-2" @click="window.location.href = '/manager/group/{{.GroupID}}'">Finish
        </button>
    </div>
</div>

<script>
    let manager = new Vue({
        el: '#manager',
        delimiters: ['${', '}'],
        data: {
            done: false,
            pre: true,
            members: {{.Members}},
            membersInGroup: {{.MembersInGroup}},
            step: 0,
            givenName: '',
            groupId: '{{.GroupID}}',
            expire: true,
            expiregroup: true,
            dateExpires: new Date(),
            skipped: [],
            grp: false,
        },
        methods: {
            topStyle: function (i) {
                if (this.step > i) {
                    if (this.skipped.includes(i)) {
                        return 'background-color: var(--bs-yellow); box-shadow: 2px 2px 6px 2px rgba(0,0,0,0.46);'
                    }
                    return 'background-color: var(--bs-green); box-shadow: 2px 2px 6px 2px rgba(0,0,0,0.46);'
                } else if (this.step === i) {
                    return 'background-color: var(--bs-blue); box-shadow: inset 0px 0px 8px 2px rgba(0,0,0,0.29);'
                } else {
                    return 'background-color: var(--bs-gray-700); box-shadow: 2px 2px 6px 2px rgba(0,0,0,0.46);'
                }
            },
            topClass: function (i) {
                if (this.step > i) {
                    return 'rounded-3'
                } else if (this.step === i) {
                    return 'rounded-3'
                } else {
                    return 'rounded-1'
                }
            },
            skip: function () {
                this.skipped.push(this.step);
                this.makeASkip();
            },
            makeASkip: function () {
                if (this.step === this.members.length - 1) {
                    this.done = true;
                    return;
                }
                this.step++;
                this.givenName = '';
            },
            add: async function () {
                if (this.givenName === '') {
                    alert("Please enter a name!");
                    return;
                }

                const date = new Date(this.dateExpires).toISOString();
                let response = await fetch('/manager/gitusr/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        username: this.givenName,
                        gitUsername: this.members[this.step].GitName,
                        userGroup: this.groupId,
                        expireGroup: this.expiregroup,
                        expires: this.expire,
                        dateExpires: date
                    })
                }).then((res) => {
                    return res;
                });
                // Send info if it fails
                if (response.status !== 200) {
                    let data = await response.json();
                    alert("Failed to create user " + data.message);
                    return;
                }
                this.makeASkip();
            },
            skipAnimation: function () {

            },
            getMembers: function () {
                if (this.grp) {
                    return this.membersInGroup;
                } else {
                    return this.members;
                }
            },
            getMode: function () {
                if (this.grp) {
                    return 'Group Mode';
                } else {
                    return 'ASO Mode';
                }
            },
            getText: function () {
                if (this.grp) {
                    return 'the group {{.GroupName}}';
                } else {
                    return 'ASO';
                }
            }
        },
    });
</script>
</body>
</html>
