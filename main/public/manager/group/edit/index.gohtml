<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <title>Edit Group</title>
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Copyright -->
    <meta name="author" content="Noah Elijah Till"/>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
          crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
            crossorigin="anonymous"></script>
    <!-- Google Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet">
    <!-- Vue -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2" crossorigin="anonymous"></script>
</head>
<body>

<div id="manager" class="container mt-5">
    <div class="container d-flex flex-column">
        <div class="d-flex flex-row align-items-center mb-3">
            <h1 class="flex-grow-1 text-white">Edit User Group</h1>
            <button class="btn btn-danger pl-2 h-50" onclick="window.location.href = '/manager?a=group'">Back</button>
        </div>
        <div class="d-flex flex-column justify-content-center">
            <div class="form-floating mb-4">
                <input v-model="name" type="text" class="form-control" id="floatingInput"
                       placeholder="Studentengruppe 1">
                <label for="floatingInput">Name</label>
                <div id="emailHelp" class="form-text">A name to identify the group in the system</div>
            </div>
            <div class="form-floating mb-4">
                <input v-model="gitOwner" type="text" class="form-control" id="repoOwner"
                       placeholder="MindCollaps">
                <label for="repoOwner">Repository owner</label>
                <div id="emailHelp" class="form-text">The name of the repository owner. github.com/<b>name</b>/project
                </div>
            </div>
            <div class="input-group mb-4">
                <div class="form-floating">
                    <input v-model="gitName" type="text" class="form-control" id="repoName"
                           placeholder="MindCollaps">
                    <label for="repoName">Repository Name</label>
                </div>
                <button class="btn btn-success" type="button" id="checkRepo" @click="checkRepo()">Check</button>
            </div>
            <div class="mb-4 form-check">
                <input type="checkbox" v-model="notify" class="form-check-input" id="getnotified">
                <label class="form-check-label" for="getnotified">Notify</label>
                <div id="emailHelp" class="form-text">Whether you'd like to get notified on this groups activity</div>
            </div>
            <div class="mb-4 form-check">
                <input type="checkbox" v-model="doesExpire" class="form-check-input" id="doesExpire">
                <label class="form-check-label" for="doesExpire">Expires</label>
                <div id="emailHelp" class="form-text">Does this group expire and is therefor deleted automatically?
                </div>
            </div>
            <div v-if="doesExpire" class="mb-4 form-floating">
                <input v-model="dateExpires" type="datetime-local" class="form-control" id="dateExpires">
                <label for="dateExpires">Expiry</label>
                <div id="emailHelp" class="form-text">The date this group expires and is therefor deleted automatically
                    (when Auto Delete is selected)
                </div>
            </div>
            <div class="mb-4 form-check">
                <input type="checkbox" v-model="autoRemove" class="form-check-input" id="autoRemove">
                <label class="form-check-label" for="autoRemove">Auto Remove</label>
                <div id="emailHelp" class="form-text">Weather this group removes all the users from the repo, but not
                    from this group
                </div>
            </div>
            <div class="mb-4 form-check">
                <input type="checkbox" v-model="autoDelete" class="form-check-input" id="autoDelete">
                <label class="form-check-label" for="autoDelete">Auto Delete</label>
                <div id="emailHelp" class="form-text">Weather this group deletes itself and all users in it when the
                    expiry date is reached
                </div>
            </div>
            <div v-if="!autoRemove && autoDelete" class="bg-danger-subtle rounded-3 shadow p-4">
                <p class="m-0">Selecting Auto Delete but <b>not</b> Auto Remove will delete the group and all users in
                    it, but not remove them from the repository! This results in deleting all git user related data and
                    therefor loosing track of who is in your repository</p>
            </div>
            <div class="mt-4 d-flex justify-content-center">
                <button @click="submit()" class="btn btn-success p-3 pt-1 pb-1 align-center fs-4">Submit</button>
            </div>
        </div>
    </div>
</div>

<script>
    const main = new Vue({
        el: '#manager',
        delimiters: ['${', '}'],
        data: {
            name: "{{.Name}}",
            dateExpires: "{{.DateExpires}}",
            doesExpire: {{.Expires}},
            notify: {{.Notify}},
            autoDelete: {{.AutoDelete}},
            gitOwner: "{{.GitHubOwner}}",
            gitName: "{{.GitHubRepo}}",
            autoRemove: {{.AutoRemoveUsers}}
        },
        created: function () {
            //time in 3 months from now at 01:00
            const date = new Date(Date.now() + 1000 * 60 * 60 * 24 * 30 * 12 * 3);

            date.setHours(1);
            date.setMinutes(0);

            //format date
            const year = date.getFullYear();
            let month = date.getMonth() + 1;
            let day = date.getDate();

            let hour = date.getHours();
            let minute = date.getMinutes();

            if (month < 10) month = "0" + month;
            if (day < 10) day = "0" + day;

            if (hour < 10) hour = "0" + hour;
            if (minute < 10) minute = "0" + minute;

            this.dateExpires = year + "-" + month + "-" + day + "T" + hour + ":" + minute;
        },
        methods: {
            submit: async function () {
                //check
                if (this.name === "") {
                    alert("Name is required");
                    return;
                }
                if (this.gitName === "") {
                    alert("Repository name is required");
                    return;
                }
                if (this.gitOwner === "") {
                    alert("Repository owner is required");
                    return;
                }
                if (this.doesExpire && this.dateExpires === "") {
                    alert("Expiry date is required");
                    return;
                }


                const date = new Date(this.dateExpires).toISOString();
                console.log(date)
                let response = await fetch('/manager/group/edit/{{.ID}}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        name: this.name,
                        dateExpires: date,
                        doesExpire: this.doesExpire,
                        notify: this.notify,
                        autoDelete: this.autoDelete,
                        gitOwner: this.gitOwner,
                        gitRepo: this.gitName,
                        autoRemoveUsers: this.autoRemove
                    })
                }).then((res) => {
                    return res;
                });
                //send info if it fails
                if (response.status !== 200) {
                    let data = await response.json();
                    alert("Failed to update group " + data.message);
                } else {
                    alert("Group updated successfully!");
                    location.href = "/manager?a=group";
                }
            },
            checkRepo: async function () {
                let response = await fetch('/manager/repoexists', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        gitOwner: this.gitOwner,
                        gitRepo: this.gitName,
                        isOwn: false
                    })
                }).then((res) => {
                    return res;
                });

                if (response.status !== 200) {
                    document.getElementById("checkRepo").classList.remove("btn-success");
                    document.getElementById("checkRepo").classList.add("btn-danger");

                    document.getElementById("repoName").classList.remove("is-valid");
                    document.getElementById("repoName").classList.add("is-invalid");

                    document.getElementById("repoOwner").classList.remove("is-valid");
                    document.getElementById("repoOwner").classList.add("is-invalid");
                } else {
                    document.getElementById("checkRepo").classList.remove("btn-danger");
                    document.getElementById("checkRepo").classList.add("btn-success");

                    document.getElementById("repoName").classList.remove("is-invalid");
                    document.getElementById("repoName").classList.add("is-valid");

                    document.getElementById("repoOwner").classList.remove("is-invalid");
                    document.getElementById("repoOwner").classList.add("is-valid");
                }
            }
        }
    });
</script>
</body>
</html>
