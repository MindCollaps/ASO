<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <title>Group info</title>
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Copyright -->
    <meta name="author" content="Noah Elijah Till"/>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
    <!-- Google Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet">
    <!-- Vue -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2" crossorigin="anonymous"></script>
</head>
<body>
<div id="manager" class="container mt-5">
    <div class="container d-flex flex-column">
        <div class="d-flex flex-row align-items-center mb-3">
            <h1 class="flex-grow-1 text-white">Group Info</h1>
            <button class="btn btn-danger pl-2 h-50" onclick="window.location.href = '/manager?a=group'">Back</button>
        </div>
        <div class="bg-body-secondary rounded-3 shadow p-4">
            <h1>Group Name: {{.Name}}</h1>
            <h2>Group ID: {{.ID}}</h2>
            <h2>Repository: <a target="_blank"
                               href="https://github.com/{{.GitHubOwner}}/{{.GitHubRepo}}">{{.GitHubOwner}}
                    /{{.GitHubRepo}}</a></h2>
            <h2>Created: {{.Date}}</h2>
            <hr>
            <h2>Auto Remove Users: {{.AutoRemoveUsers}}</h2>
            <h2>Auto Delete: {{.AutoDelete}}</h2>
            {{if .IsExpired}}<h2>Expires: <a
                        class="text-decoration-none text-danger">Expired</a>
            </h2>
            {{else}}
                <h3>Expires: {{.DateExpires}}</h3>
            {{end}}
            <hr>
            <h2>Group Members:</h2>
            <ul class="d-flex flex-column container gap-3 bg-body-tertiary rounded-3 shadow p-3 h-50 overflow-auto">
                {{if .Members}}
                    {{range .Members}}
                        <div class="d-inline-flex justify-content-between align-items-center gap-3">
                            <div>
                                <h4>{{.Username}}</h4>
                            </div>
                            <div>
                                {{if .IsCollaborator}}<a class="text-success text-decoration-none">Is
                                    Collaborator</a>{{else}}
                                    {{if .IsInvited}}<a class="text-warning text-decoration-none">Pending
                                        Invite</a>{{else}}
                                        <a class="text-danger text-decoration-none">Not invited/No
                                            collaborator</a>{{end}}{{end}}
                            </div>
                            <div class="d-flex justify-content-center gap-2 align-items-center">
                                <div>
                                    <button class="btn btn-secondary" @click="infoUser('{{.ID}}')"><span
                                                class="material-icons align-middle fs-5">info</span></button>
                                </div>
                                <div>
                                    {{if .IsCollaborator}}
                                        <button class="btn btn-danger col" @click="removeFromRepo('{{.ID}}')">Remove
                                            from
                                            Repo
                                        </button>{{else}}
                                        {{if .IsInvited}}
                                            <button class="btn btn-danger col" @click="removeFromRepo('{{.ID}}')">Cancel
                                                invite
                                            </button>{{else}}
                                            <button class="btn btn-success col" @click="addToRepo('{{.ID}}')">Add to
                                                repo
                                            </button>{{end}}{{end}}
                                </div>
                                <div>
                                    <button class="btn btn-danger" @click="removeFromGroup('{{.ID}}')"><span
                                                class="material-icons align-middle fs-5">person_remove</span></button>
                                </div>
                            </div>
                        </div>
                    {{end}}
                {{else}}
                    <h3>No Members</h3>
                {{end}}
            </ul>
            <br>
            <h1>Management</h1>
            <div class="column container bg-body-tertiary rounded-3 shadow p-3">
                <h3>Git</h3>
                <button class="btn btn-success" @click="addAllUsersToRepo()" data-bs-toggle="tooltip"
                        data-bs-placement="top"

                        data-bs-title="This adds all users in the group to the repo."><span
                            class="material-icons align-middle fs-5">group_add</span></button>
                <button class="btn btn-danger" @click="removeGitUsers()" data-bs-toggle="tooltip"
                        data-bs-placement="top" data-bs-title="This removes all users in the group from the repo"><span
                            class="material-icons align-middle fs-5">group_remove</span></button>
            </div>
            <hr>
            <div class="column container bg-body-tertiary rounded-3 shadow p-3">
                <h3>Group</h3>
                <button class="btn btn-success"  @click="editGroup()"><span class="material-icons align-middle fs-5">settings</span></button>
                <button class="btn btn-danger" @click="removeMembers()" data-bs-toggle="tooltip" data-bs-placement="top"
                        data-bs-title="This removes all group members."><span class="material-icons align-middle fs-5">group_remove</span>
                </button>
                <button class="btn btn-danger" @click="deleteGroup()" data-bs-toggle="tooltip" data-bs-placement="top"
                        data-bs-title="This deletes the group."><span
                            class="material-icons align-middle fs-5">delete</span></button>
            </div>
        </div>
    </div>
</div>

<script>
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

    let manager = new Vue({
        el: '#manager',
        methods: {
            removeFromGroup: async function (id) {
                if (!confirm("Are you sure you want to remove this user from the group?")) {
                    return
                }

                fetch("/manager/group/{{.ID}}/remove/" + id, {
                    method: "GET"
                }).then(res => {
                    if (res.status === 200) {
                        document.location.reload()
                    } else {
                        const data = res.json();
                        alert("Error removing user from group\n" + data.message)
                    }
                })
            },
            infoUser: async function (id) {
                window.location.href = '/manager/gitusr/' + id;
            },
            deleteGroup: async function () {
                //confirm delete
                if (!confirm("Are you sure you want to delete this group?")) {
                    return
                }
                //delete group
                let res = await fetch("/manager/group/{{.ID}}", {
                    method: "DELETE"
                }).then((res) => {
                    return res;
                });
                if (res.status === 200) {
                    //reload page
                    document.location.href = "/manager?a=group"
                } else {
                    //error
                    alert("Error deleting group")
                }
            },
            removeGitUsers: async function () {
                //confirm delete
                if (!confirm("Are you sure you want to remove all users from the git repo?")) {
                    return
                }
                //delete group
                let res = await fetch("/manager/git/{{.ID}}/removeall", {
                    method: "GET"
                }).then((res) => {
                    return res;
                });
                if (res.status === 200) {
                    //reload page
                    const data = await res.json();
                    if (data.problems.length > 0) {
                        alert("Users removed from git repo, but some users had problems:\n" + data.problems)
                    } else {
                        alert("Users removed from git repo")
                    }
                    document.location.reload()
                } else {
                    //error
                    alert("Error removing users from git repo")
                }
            },
            addAllUsersToRepo: async function () {
                if (!confirm("Are you sure you want to add all users to the git repo?")) {
                    return
                }
                let res = await fetch("/manager/git/{{.ID}}/addall", {
                    method: "GET"
                }).then((res) => {
                    return res;
                });
                if (res.status === 200) {
                    //reload page
                    const data = await res.json();
                    if (data.problems.length > 0) {
                        alert("Users added to git repo, but some users had problems:\n" + data.problems)
                    } else {
                        alert("Users added to git repo")
                    }
                    document.location.reload()
                } else {
                    //error
                    alert("Error adding users to git repo")
                }
            },
            removeFromRepo: async function (id) {
                if (!confirm("Are you sure you want to remove this user from the repo?")) {
                    return
                }

                const res = await fetch('/manager/git/{{.ID}}/remove/' + id, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }).then((res) => {
                    return res;
                });

                if (res.status === 200) {
                    window.location.reload();
                } else {
                    const data = await res.json();
                    alert("Error removing user from repo\n" + data.message)
                }
            },
            addToRepo: async function (id) {
                const res = await fetch('/manager/git/{{.ID}}/add/' + id, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }).then((res) => {
                    return res;
                });

                if (res.status === 200) {
                    window.location.reload();
                } else {
                    const data = await res.json();
                    alert("Error adding user to repo\n" + data.message)
                }
            },
            editGroup: async function () {
                //redirect to edit group page
                document.location.href = "/manager/group/edit/{{.ID}}"
            },
        },
    });
</script>
</body>
</html>
