<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <title>User info</title>
    <!-- Meta Tags -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Copyright -->
    <meta name="author" content="Noah Elijah Till"/>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
    <!-- Google Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet">
    <!-- Vue -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2" crossorigin="anonymous"></script>
</head>
<body>
<div id="manager" class="container mt-5">
    <div class="modal fade" id="activationModel" tabindex="-1" aria-labelledby="activationModel">
        <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content rounded-4 shadow">
                <div class="modal-header border-bottom-0">
                    <div class="w-100 d-flex justify-content-center">
                        <h1 class="modal-title text-light fs-5">Add User to Group</h1>
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                <div class="modal-body py-0 text-body-emphasis">
                    <div>
                        {{if .Groups}}
                            {{range .Groups}}
                                <div class="d-flex flex-row justify-content-between align-items-center p-3">
                                    <p class="mb-0">{{.Name}}</p>
                                    <a target="_blank"
                                       href="https://github.com/{{.GitHubOwner}}/{{.GitHubRepo}}">{{.GitHubOwner}}
                                        /{{.GitHubRepo}}</a>
                                    <p class="mb-0">Created: {{.Date}}</p>
                                    <button v-if="group == '{{.ID}}'" class="btn btn-danger" @click="select('')">
                                        <span class="material-icons align-middle fs-5">close</span>
                                    </button>
                                    <button v-if="group != '{{.ID}}'" class="btn btn-primary"
                                            @click="select('{{.ID}}')"><span class="material-icons align-middle fs-5">check</span>
                                    </button>
                                </div>
                            {{end}}
                        {{else}}
                            <p>No User Groups</p>
                            <button class="btn btn-primary" onclick="window.location.href = '/manager/group/create'">
                                Create User Group
                            </button>
                        {{end}}
                    </div>
                    <div class="modal-footer">
                        <div class="d-flex flex-row gap-2 align-items-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button class="btn btn-success" onclick="location.href='/manager/group/create'"><span
                                        class="material-icons align-middle fs-5">group_add</span></button>
                            <button type="button" class="btn btn-primary" @click="addToGroup()">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container d-flex flex-column">
        <div class="d-flex flex-row align-items-center mb-3">
            <h1 class="flex-grow-1 text-white">User Info</h1>
            <button class="btn btn-danger pl-2 h-50" onclick="window.location.href = '/manager?a=git'">Back</button>
        </div>
        <div class="bg-body-secondary rounded-3 shadow p-4">
            <h2>Username: {{.Username}}</h2>
            <h2>Git Username: {{.GitHubUsername}}</h2>
            <h2>User ID: {{.ID}}</h2>
            <h2>Created: {{.DateCreated}}</h2>
            {{if .ExpiryByGroup}}
                {{if .UserGroup.Name}}
                    {{if .UserGroup.IsExpired}}
                        <h3>Expires by group: <a class="text-decoration-none text-danger">Expired</a></h3>
                    {{else}}<h3>Expires by group: <a
                                class="text-decoration-none text-warning">{{.UserGroup.DateExpires}}</a></h3>{{end}}
                {{else}}{{if .IsExpired}}<h3>Expires: <a class="text-decoration-none text-danger">Expired</a>
                </h3>{{else}}<h3>Expires: {{.DateExpires}}</h3>{{end}}
                {{end}}{{else}}
                {{if .IsExpired}}<h3>Expires: <a class="text-decoration-none text-danger">Expired</a></h3>{{else}}<h3>
                    Expires: {{.DateExpires}}</h3>{{end}}{{end}}
            <h2>Expiry by Group: {{.ExpiryByGroup}}</h2>
            <h2>Group:</h2>
            {{if .UserGroup.Name}}
            <div class="column container bg-body-tertiary rounded-3 shadow p-3">
                <h3>Group Name: {{.UserGroup.Name}}</h3>
                <h3>Repository: <a target="_blank"
                                   href="https://github.com/{{.UserGroup.GitHubOwner}}/{{.UserGroup.GitHubRepo}}">{{.UserGroup.GitHubOwner}}
                        /{{.UserGroup.GitHubRepo}}</a></h3>
                <h3>State:
                    {{if .IsCollaborator}}<a class="text-success text-decoration-none">Is Collaborator</a>{{else}}
                        {{if .IsInvited}}<a class="text-warning text-decoration-none">Pending Invite</a>{{else}}
                            <a class="text-danger text-decoration-none">Not invited/No collaborator</a>{{end}}{{end}}
                </h3>
                <h3>Group ID: {{.UserGroup.ID}}</h3>
                <h3>Created: {{.UserGroup.Date}}</h3>
                {{if .UserGroup.IsExpired}}<h3>Expires: <a class="text-decoration-none text-danger">Expired</a>
                </h3>{{else}}<h3>Expires: {{.UserGroup.DateExpires}}</h3>{{end}}
                <div class="d-inline-flex flex-row mt-3 gap-3">
                    {{if .IsCollaborator}}
                    <button class="btn btn-danger col" @click="removeFromRepo()">Remove from Repo</button>{{else}}
                        {{if .IsInvited}}
                        <button class="btn btn-danger col" @click="removeFromRepo()">Cancel invite</button>{{else}}
                            <button class="btn btn-success col" @click="addToRepo()">Add to repo</button>{{end}}{{end}}
                    <button class="btn btn-danger col" @click="removeFromGroup()"><span
                                class="material-icons align-middle fs-5">group_remove</span></button>
                </div>
                {{else}}
                    <div class="column container bg-body-tertiary rounded-3 shadow p-3 d-flex flex-row align-items-center gap-3">
                        <h2>None</h2>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#activationModel"><span
                                    class="material-icons align-middle fs-5">person_add</span></button>
                    </div>
                {{end}}
                <br>
                <h1>Management</h1>
                <span data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Tooltip on top">
                <button class="btn btn-danger" @click="deleteUser()"><span class="material-icons align-middle fs-5">delete</span></button>
            </span>
            </div>
        </div>
    </div>
</div>

<script>
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl, {}))

    let manager = new Vue({
        el: '#manager',
        data: {
            user: '{{.ID}}',
            group: '{{.UserGroup.ID}}',
            groups: [],
        },
        methods: {
            deleteUser: async function () {
                //confirm delete
                if (!confirm("Are you sure you want to delete this user?")) {
                    return
                }
                //delete user
                let res = await fetch("/manager/gitusr/" + '{{.ID}}', {
                    method: "DELETE"
                }).then((res) => {
                    return res;
                });
                if (res.status === 200) {
                    //reload page
                    document.location.href = "/manager?a=git"
                } else {
                    //error
                    alert("Error deleting user")
                }
            },
            removeFromGroup: async function () {
                if (!confirm("Are you sure you want to remove this user from the group?")) {
                    return
                }

                await fetch('/manager/group/' + this.group + '/remove/' + this.user, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }).then(response => {
                    if (response.status === 200) {
                        window.location.reload();
                    }
                })
            },
            addToGroup: async function () {
                var res = await fetch('/manager/group/' + this.group + '/add/' + this.user, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }).then((res) => {
                    return res;
                });

                if (res.status === 200) {
                    window.location.reload();
                } else {
                    var data = await res.json()
                    alert("Error adding user to group\n" + data.message)
                }
            },
            removeFromRepo: async function () {
                if (!confirm("Are you sure you want to remove this user from the repo?")) {
                    return
                }

                var res = await fetch('/manager/git/' + this.group + '/remove/' + this.user, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }).then((res) => {
                    return res;
                });

                if (res.status === 200) {
                    window.location.reload();
                } else {
                    var data = await res.json()
                    alert("Error removing user from repo\n" + data.message)
                }
            },
            addToRepo: async function () {
                var res = await fetch('/manager/git/' + this.group + '/add/' + this.user, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }).then((res) => {
                    return res;
                });

                if (res.status === 200) {
                    window.location.reload();
                } else {
                    var data = await res.json()
                    alert("Error adding user to repo\n" + data.message)
                }
            },
            select: function (id) {
                this.group = id
            }
        },
    });
</script>
</body>
</html>
